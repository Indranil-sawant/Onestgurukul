{
    "sourceFile": "assets/js/main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1758198592553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758198734613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,34 +211,5 @@\n   });\n });\n \n \n-  const texts = [\n-    \"Where Children Learn Not Just for Exams, But for Life.\",\n-    \"Nurturing Curiosity, Creativity, and Confidence.\",\n-    \"Building a Strong Foundation for a Bright Future.\",\n-    \"Education Beyond Classrooms, Towards Excellence.\",\n-    \"Inspiring Young Minds to Achieve Greatness.\"\n-  ];\n-\n-  let index = 0;\n-  const element = document.getElementById(\"changingText\");\n-\n-  function changeText() {\n-    // Fade out\n-    element.style.opacity = 0;\n-\n-    setTimeout(() => {\n-      element.textContent = texts[index];\n-      element.style.opacity = 1; // Fade in\n-      index = (index + 1) % texts.length;\n-    }, 500); // Wait for fade-out before changing text\n-  }\n-\n-  // Initial style\n-  element.style.transition = \"opacity 0.5s ease-in-out\";\n-  element.textContent = texts[index];\n-\n-  index++;\n-\n-  // Change every 3 seconds\n-  setInterval(changeText, 3000);\n\\ No newline at end of file\n+  \n\\ No newline at end of file\n"
                }
            ],
            "date": 1758198592553,
            "name": "Commit-0",
            "content": "\n\n(function() {\n  \"use strict\";\n\n  /**\n   * Apply .scrolled class to the body as the page is scrolled down\n   */\n  function toggleScrolled() {\n    const selectBody = document.querySelector('body');\n    const selectHeader = document.querySelector('#header');\n    if (!selectHeader.classList.contains('scroll-up-sticky') && !selectHeader.classList.contains('sticky-top') && !selectHeader.classList.contains('fixed-top')) return;\n    window.scrollY > 100 ? selectBody.classList.add('scrolled') : selectBody.classList.remove('scrolled');\n  }\n\n  document.addEventListener('scroll', toggleScrolled);\n  window.addEventListener('load', toggleScrolled);\n\n  /**\n   * Mobile nav toggle\n   */\n  const mobileNavToggleBtn = document.querySelector('.mobile-nav-toggle');\n\n  function mobileNavToogle() {\n    document.querySelector('body').classList.toggle('mobile-nav-active');\n    mobileNavToggleBtn.classList.toggle('bi-list');\n    mobileNavToggleBtn.classList.toggle('bi-x');\n  }\n  if (mobileNavToggleBtn) {\n    mobileNavToggleBtn.addEventListener('click', mobileNavToogle);\n  }\n\n  /**\n   * Hide mobile nav on same-page/hash links\n   */\n  document.querySelectorAll('#navmenu a').forEach(navmenu => {\n    navmenu.addEventListener('click', () => {\n      if (document.querySelector('.mobile-nav-active')) {\n        mobileNavToogle();\n      }\n    });\n\n  });\n\n  /**\n   * Toggle mobile nav dropdowns\n   */\n  document.querySelectorAll('.navmenu .toggle-dropdown').forEach(navmenu => {\n    navmenu.addEventListener('click', function(e) {\n      e.preventDefault();\n      this.parentNode.classList.toggle('active');\n      this.parentNode.nextElementSibling.classList.toggle('dropdown-active');\n      e.stopImmediatePropagation();\n    });\n  });\n\n  /**\n   * Preloader\n   */\n  const preloader = document.querySelector('#preloader');\n  if (preloader) {\n    window.addEventListener('load', () => {\n      preloader.remove();\n    });\n  }\n\n  /**\n   * Scroll top button\n   */\n  let scrollTop = document.querySelector('.scroll-top');\n\n  function toggleScrollTop() {\n    if (scrollTop) {\n      window.scrollY > 100 ? scrollTop.classList.add('active') : scrollTop.classList.remove('active');\n    }\n  }\n  scrollTop.addEventListener('click', (e) => {\n    e.preventDefault();\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  });\n\n  window.addEventListener('load', toggleScrollTop);\n  document.addEventListener('scroll', toggleScrollTop);\n\n  /**\n   * Animation on scroll function and init\n   */\n  function aosInit() {\n    AOS.init({\n      duration: 400,\n      easing: 'ease-in-out',\n      once: true,\n      mirror: false\n    });\n  }\n  window.addEventListener('load', aosInit);\n\n  /**\n   * Init swiper sliders\n   */\n  function initSwiper() {\n    document.querySelectorAll(\".init-swiper\").forEach(function(swiperElement) {\n      let config = JSON.parse(\n        swiperElement.querySelector(\".swiper-config\").innerHTML.trim()\n      );\n\n      if (swiperElement.classList.contains(\"swiper-tab\")) {\n        initSwiperWithCustomPagination(swiperElement, config);\n      } else {\n        new Swiper(swiperElement, config);\n      }\n    });\n  }\n\n  window.addEventListener(\"load\", initSwiper);\n\n  /**\n   * Initiate Pure Counter\n   */\n  new PureCounter();\n\n  /**\n   * Init isotope layout and filters\n   */\n  document.querySelectorAll('.isotope-layout').forEach(function(isotopeItem) {\n    let layout = isotopeItem.getAttribute('data-layout') ?? 'masonry';\n    let filter = isotopeItem.getAttribute('data-default-filter') ?? '*';\n    let sort = isotopeItem.getAttribute('data-sort') ?? 'original-order';\n\n    let initIsotope;\n    imagesLoaded(isotopeItem.querySelector('.isotope-container'), function() {\n      initIsotope = new Isotope(isotopeItem.querySelector('.isotope-container'), {\n        itemSelector: '.isotope-item',\n        layoutMode: layout,\n        filter: filter,\n        sortBy: sort\n      });\n    });\n\n    isotopeItem.querySelectorAll('.isotope-filters li').forEach(function(filters) {\n      filters.addEventListener('click', function() {\n        isotopeItem.querySelector('.isotope-filters .filter-active').classList.remove('filter-active');\n        this.classList.add('filter-active');\n        initIsotope.arrange({\n          filter: this.getAttribute('data-filter')\n        });\n        if (typeof aosInit === 'function') {\n          aosInit();\n        }\n      }, false);\n    });\n\n  });\n\n  /**\n   * Initiate glightbox\n   */\n  const glightbox = GLightbox({\n    selector: '.glightbox'\n  });\n\n})();\n\n\n\n\ndocument.getElementById(\"leadForm\").addEventListener(\"submit\", function(e) {\n  e.preventDefault();\n\n  const form = this;\n  const loadingEl = form.querySelector(\".loading\");\n  const errorEl = form.querySelector(\".error-message\");\n  const successEl = form.querySelector(\".sent-message\");\n\n  // Reset messages\n  loadingEl.style.display = \"block\";\n  errorEl.style.display = \"none\";\n  successEl.style.display = \"none\";\n\n  const formData = {\n    name: form.name.value,\n    email: form.email.value,\n    phone: form.phone.value,\n    message: form.message.value\n  };\n\n  fetch(\"https://script.google.com/macros/s/AKfycbwulfoZlWz-1OFriiSHDMkY95128zmJsaErd49mdLGzbx_Ip_KVOsAEnPJkFIpuaO_7QQ/exec\", {\n    method: \"POST\",\n    body: JSON.stringify(formData),\n    headers: { \"Content-Type\": \"application/json\" }\n  })\n  .then(res => res.json())\n  .then(data => {\n    loadingEl.style.display = \"none\";\n    if (data.result === \"success\") {\n      successEl.style.display = \"block\";\n      form.reset();\n    } else {\n      errorEl.innerText = \"Something went wrong. Please try again.\";\n      errorEl.style.display = \"block\";\n    }\n  })\n  .catch(err => {\n    loadingEl.style.display = \"none\";\n    errorEl.innerText = \"Network error. Please try again.\";\n    errorEl.style.display = \"block\";\n    console.error(err);\n  });\n});\n\n\n  const texts = [\n    \"Where Children Learn Not Just for Exams, But for Life.\",\n    \"Nurturing Curiosity, Creativity, and Confidence.\",\n    \"Building a Strong Foundation for a Bright Future.\",\n    \"Education Beyond Classrooms, Towards Excellence.\",\n    \"Inspiring Young Minds to Achieve Greatness.\"\n  ];\n\n  let index = 0;\n  const element = document.getElementById(\"changingText\");\n\n  function changeText() {\n    // Fade out\n    element.style.opacity = 0;\n\n    setTimeout(() => {\n      element.textContent = texts[index];\n      element.style.opacity = 1; // Fade in\n      index = (index + 1) % texts.length;\n    }, 500); // Wait for fade-out before changing text\n  }\n\n  // Initial style\n  element.style.transition = \"opacity 0.5s ease-in-out\";\n  element.textContent = texts[index];\n\n  index++;\n\n  // Change every 3 seconds\n  setInterval(changeText, 3000);"
        }
    ]
}